{"name": "Заполнение формы регистрации пользователя", "status": "broken", "statusDetails": {"message": "playwright._impl._errors.TargetClosedError: Target page, context or browser has been closed", "trace": "page = <Page url='about:blank'>\n\n    @pytest.fixture(scope='function')\n    def practice_form(page: Page):\n>       return PracticeFormPage(page)\n\n..\\..\\conftest.py:32: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\base\\pages\\practice_form\\practice_form_page.py:15: in __init__\n    self.gender = Button(page, locator='//*[@id=\"gender-radio-2\"]', name='Пол').on_click()\n..\\..\\base\\page_factory\\button.py:36: in on_click\n    locator.click()\n..\\..\\.venv\\Lib\\site-packages\\playwright\\sync_api\\_generated.py:15784: in click\n    self._sync(\n..\\..\\.venv\\Lib\\site-packages\\playwright\\_impl\\_locator.py:159: in click\n    return await self._frame.click(self._selector, strict=True, **params)\n..\\..\\.venv\\Lib\\site-packages\\playwright\\_impl\\_frame.py:484: in click\n    await self._channel.send(\"click\", locals_to_params(locals()))\n..\\..\\.venv\\Lib\\site-packages\\playwright\\_impl\\_connection.py:62: in send\n    return await self._connection.wrap_api_call(\n..\\..\\.venv\\Lib\\site-packages\\playwright\\_impl\\_connection.py:492: in wrap_api_call\n    return await cb()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <playwright._impl._connection.Channel object at 0x000002BA49D50560>\nmethod = 'click'\nparams = {'selector': '//*[@id=\"gender-radio-2\"]', 'strict': True}\nreturn_as_dict = False\n\n    async def inner_send(\n        self, method: str, params: Optional[Dict], return_as_dict: bool\n    ) -> Any:\n        if params is None:\n            params = {}\n        callback = self._connection._send_message_to_server(\n            self._object, method, params\n        )\n        if self._connection._error:\n            error = self._connection._error\n            self._connection._error = None\n            raise error\n        done, _ = await asyncio.wait(\n            {\n                self._connection._transport.on_error_future,\n                callback.future,\n            },\n            return_when=asyncio.FIRST_COMPLETED,\n        )\n        if not callback.future.done():\n            callback.future.cancel()\n>       result = next(iter(done)).result()\nE       playwright._impl._errors.TargetClosedError: Target page, context or browser has been closed\n\n..\\..\\.venv\\Lib\\site-packages\\playwright\\_impl\\_connection.py:100: TargetClosedError"}, "start": 1725226221222, "stop": 1725226221222, "uuid": "68d4219d-71d9-482c-8d12-a3c66a87a1c1", "historyId": "e293216c446081c4d1c559a1bd3c283c", "testCaseId": "e293216c446081c4d1c559a1bd3c283c", "fullName": "tests.test_ui.test_practice_form.TestPractice#test_practice_form", "labels": [{"name": "feature", "value": "Practice Form"}, {"name": "epic", "value": "Тесты потока 1"}, {"name": "parentSuite", "value": "tests.test_ui"}, {"name": "suite", "value": "test_practice_form"}, {"name": "subSuite", "value": "TestPractice"}, {"name": "host", "value": "olesya"}, {"name": "thread", "value": "13484-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_ui.test_practice_form"}]}