{"name": "Регистрация v1", "status": "failed", "statusDetails": {"message": "AssertionError: Неожиданный статус ответа: 406", "trace": "self = <tests.test_api.registration.test_v1_register.TestRegistrationV1Account object at 0x000001885A4B6120>\n\n    @allure.epic('API')\n    @allure.title('Регистрация v1')\n    def test_registration_v1_account(self):\n        \"\"\"\n        Тест для проверки регистрации пользователя через POST-запрос на эндпоинт /Account/v1/User.\n    \n        Этот тест выполняет следующие шаги:\n        1. Вызывает метод `post_v1_account_registration` из класса `RegistrationMethods`, который:\n           - Формирует данные для запроса.\n           - Отправляет POST-запрос на сервер для регистрации пользователя.\n           - Валидирует ответ сервера, проверяя успешность авторизации.\n    \n        Результаты теста записываются в отчет Allure, включая шаги формирования данных, отправки запроса и валидации ответа.\n        Если тест проходит успешно, в консоль выводится информация о статусе регистрации. В случае ошибки тест завершится\n        с сообщением об ошибке, которое будет включено в отчет Allure.\n        \"\"\"\n>       RegistrationMethods.post_v1_account_registration()\n\ntest_v1_register.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\..\\base\\pages\\api_pages\\registration\\methods_v1_registration.py:16: in post_v1_account_registration\n    auth_base.validate_response(response, auth_base.validate_success_response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <base.pages.api_pages.registration.registration_base.RegistrationBase object at 0x000001885B646690>\nresponse = <Response [406]>\nsuccess_validator = <bound method RegistrationBase.validate_success_response of <base.pages.api_pages.registration.registration_base.RegistrationBase object at 0x000001885B646690>>\n\n    def validate_response(self, response, success_validator):\n        with allure.step(\"Проверка статуса и валидация ответа\"):\n            if response.status_code == 201:\n                success_validator(response)\n                print(\"Тест успешен: Статус код 201\")\n            else:\n                print(f\"Неожиданный статус ответа: {response.status_code}\")\n                print(f\"Ответ сервера: {response.text}\")\n                allure.attach(response.text, name=\"Ответ сервера\", attachment_type=allure.attachment_type.JSON)\n>               assert False, f\"Неожиданный статус ответа: {response.status_code}\"\nE               AssertionError: Неожиданный статус ответа: 406\n\n..\\..\\..\\base\\pages\\api_pages\\registration\\registration_base.py:70: AssertionError"}, "description": "\n        Тест для проверки регистрации пользователя через POST-запрос на эндпоинт /Account/v1/User.\n\n        Этот тест выполняет следующие шаги:\n        1. Вызывает метод `post_v1_account_registration` из класса `RegistrationMethods`, который:\n           - Формирует данные для запроса.\n           - Отправляет POST-запрос на сервер для регистрации пользователя.\n           - Валидирует ответ сервера, проверяя успешность авторизации.\n\n        Результаты теста записываются в отчет Allure, включая шаги формирования данных, отправки запроса и валидации ответа.\n        Если тест проходит успешно, в консоль выводится информация о статусе регистрации. В случае ошибки тест завершится\n        с сообщением об ошибке, которое будет включено в отчет Allure.\n        ", "steps": [{"name": "Регистрация пользователя через POST /Account/v1/User", "status": "failed", "statusDetails": {"message": "AssertionError: Неожиданный статус ответа: 406\n", "trace": "  File \"C:\\Users\\oleas\\PycharmProjects\\ui_test\\.venv\\Lib\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"C:\\Users\\oleas\\PycharmProjects\\ui_test\\base\\pages\\api_pages\\registration\\methods_v1_registration.py\", line 16, in post_v1_account_registration\n    auth_base.validate_response(response, auth_base.validate_success_response)\n  File \"C:\\Users\\oleas\\PycharmProjects\\ui_test\\base\\pages\\api_pages\\registration\\registration_base.py\", line 70, in validate_response\n    assert False, f\"Неожиданный статус ответа: {response.status_code}\"\n"}, "steps": [{"name": "Формирование данных и отправка запроса", "status": "passed", "steps": [{"name": "Формирование данных для запроса", "status": "passed", "attachments": [{"name": "Curl for Postman", "source": "9ab13127-c44f-4d55-bfd6-5f87b7a513f6-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "endpoint", "value": "'https://demoqa.com/Account/v1/User'"}], "start": 1725828388136, "stop": 1725828388136}, {"name": "Отправка POST-запроса", "status": "passed", "attachments": [{"name": "Ответ сервера", "source": "3fd1f514-c951-4710-a812-9e1d3ef02884-attachment.json", "type": "application/json"}, {"name": "Сырой запрос", "source": "bfdec637-4485-4c96-8a35-aa445237e0b3-attachment.json", "type": "application/json"}, {"name": "URL запроса", "source": "6102fd53-442b-42b9-b25e-48ea9bf8520f-attachment.txt", "type": "text/plain"}, {"name": "Код статуса", "source": "0453bec1-7092-4a73-964f-b3ff15460d0e-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "data", "value": "{'userName': 'Олеся123321', 'password': 'Someon123321!'}"}, {"name": "url", "value": "'https://demoqa.com/Account/v1/User'"}], "start": 1725828388136, "stop": 1725828388562}], "start": 1725828388135, "stop": 1725828388562}, {"name": "Валидация ответа", "status": "failed", "statusDetails": {"message": "AssertionError: Неожиданный статус ответа: 406\n", "trace": "  File \"C:\\Users\\oleas\\PycharmProjects\\ui_test\\base\\pages\\api_pages\\registration\\methods_v1_registration.py\", line 16, in post_v1_account_registration\n    auth_base.validate_response(response, auth_base.validate_success_response)\n  File \"C:\\Users\\oleas\\PycharmProjects\\ui_test\\base\\pages\\api_pages\\registration\\registration_base.py\", line 70, in validate_response\n    assert False, f\"Неожиданный статус ответа: {response.status_code}\"\n"}, "steps": [{"name": "Проверка статуса и валидация ответа", "status": "failed", "statusDetails": {"message": "AssertionError: Неожиданный статус ответа: 406\n", "trace": "  File \"C:\\Users\\oleas\\PycharmProjects\\ui_test\\base\\pages\\api_pages\\registration\\registration_base.py\", line 70, in validate_response\n    assert False, f\"Неожиданный статус ответа: {response.status_code}\"\n"}, "attachments": [{"name": "Ответ сервера", "source": "f37aefbe-8af4-4a32-844c-dc993ffaf97e-attachment.json", "type": "application/json"}], "start": 1725828388562, "stop": 1725828388563}], "start": 1725828388562, "stop": 1725828388563}], "start": 1725828388135, "stop": 1725828388564}], "start": 1725828388135, "stop": 1725828388565, "uuid": "ca7f6441-ec78-4526-b253-55ab59c51b7e", "historyId": "d261ea2f21e29db885a29b0cd053274f", "testCaseId": "d261ea2f21e29db885a29b0cd053274f", "fullName": "tests.test_api.registration.test_v1_register.TestRegistrationV1Account#test_registration_v1_account", "labels": [{"name": "epic", "value": "API"}, {"name": "parentSuite", "value": "tests.test_api.registration"}, {"name": "suite", "value": "test_v1_register"}, {"name": "subSuite", "value": "TestRegistrationV1Account"}, {"name": "host", "value": "olesya"}, {"name": "thread", "value": "24468-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_api.registration.test_v1_register"}]}